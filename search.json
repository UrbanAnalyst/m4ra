[{"path":"https://atfutures.github.io/m4ra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Padgham. Author, maintainer.","code":""},{"path":"https://atfutures.github.io/m4ra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Padgham M (2022). m4ra: Many--Many Multi-Modal Routing Aggregator. R package version 0.0.1.287, https://github.com/ATFutures/m4ra.","code":"@Manual{,   title = {m4ra: Many-to-Many Multi-Modal Routing Aggregator},   author = {Mark Padgham},   year = {2022},   note = {R package version 0.0.1.287},   url = {https://github.com/ATFutures/m4ra}, }"},{"path":"https://atfutures.github.io/m4ra/index.html","id":"m4ra-many-to-many-multi-modal-routing-aggregator","dir":"","previous_headings":"","what":"Many-to-Many Multi-Modal Routing Aggregator","title":"Many-to-Many Multi-Modal Routing Aggregator","text":"Status October 2022: Almost usable","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra-package.html","id":null,"dir":"Reference","previous_headings":"","what":"m4ra: Many-to-Many Multi-Modal Routing Aggregator — m4ra-package","title":"m4ra: Many-to-Many Multi-Modal Routing Aggregator — m4ra-package","text":"Many--many multi-modal routing aggregator, combining 'dodgr' 'gtfsrouter' complete routing urban networks.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"m4ra: Many-to-Many Multi-Modal Routing Aggregator — m4ra-package","text":"Maintainer: Mark Padgham mark.padgham@email.com","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra.html","id":null,"dir":"Reference","previous_headings":"","what":"Many-to-many multi-modal routing function — m4ra","title":"Many-to-many multi-modal routing function — m4ra","text":"Perform many--many multi-modal routing query","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Many-to-many multi-modal routing function — m4ra","text":"","code":"m4ra(net, gtfs = NULL, from = NULL, to = NULL, quiet = FALSE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Many-to-many multi-modal routing function — m4ra","text":"net urban network osmdata_sc format osmdata package. gtfs optional GTFS feed gtfs format gtfsrouter package. vector start points routing, specified Open Street Map (OSM) identifier (\"ID\") values, generally ID column dodgr_vertices(net), obtained matching coordinates network dodgr match_pts_to_verts function. optional vector end points routing. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Many-to-many multi-modal routing function — m4ra","text":"(Unsure stage)","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"function runs directory contain number silicate sc-formatted street networks, generated dodgr_streetnet_sc function dodgr package. function uses default cache location specified rappdirs::user_cache_dir(). location can -ridden specifying local environment variable, \"M4RA_CACHE_DIR\".","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"","code":"m4ra_batch_weight_networks(net_dir, remove_these = NULL)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"net_dir Path local directory containing 'sc'-format street networks. remove_these Names 'sc'-format files converted weighted network form.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"character vector local locations cached versions variously weighted network representations used m4ra.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"Convert bicycle automobile times equivalent areas specified range ratios two travel times.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"","code":"m4ra_bike_car_ratio_areas(bike_car_dat, ratio_lims = 1 + 0:10/10)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"bike_car_dat Result m4ra_bike_car_times function specified vector points. ratio_lims Vector ratio limits used calculate areas within ratio bicycle automobile times less specified limits.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"data.frame one row point used calculate m4ra_bike_car_times, columns including OSM \"id\" value corresponding coordinates (\"x\" \"y\"), followed series columns, one specified value ratio_lims, containing areas square kilometres bicycle travel times within specified ratio car travel times.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate times from a specified point by bicycle and automobile, along with\n(optionally) corresponding walking distances. — m4ra_bike_car_times","title":"Calculate times from a specified point by bicycle and automobile, along with\n(optionally) corresponding walking distances. — m4ra_bike_car_times","text":"city expects weighted networks generated m4ra_batch_weight_networks function, corresponding networks exist m4ra cache directory specified city.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate times from a specified point by bicycle and automobile, along with\n(optionally) corresponding walking distances. — m4ra_bike_car_times","text":"","code":"m4ra_bike_car_times(city = NULL, from = NULL, walk_dists = TRUE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate times from a specified point by bicycle and automobile, along with\n(optionally) corresponding walking distances. — m4ra_bike_car_times","text":"city City values calculated Vector OSM ID values vertices ratios calculated. Typically obtained loading one weighted network, sampling extracting vertices dodgr function dodgr_vertices. walk_dists TRUE, also calculate equivalent walking distances.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate times from a specified point by bicycle and automobile, along with\n(optionally) corresponding walking distances. — m4ra_bike_car_times","text":"data.frame destination vertices, including Open Street Map ID values, longitude latitude values, four variables: 'car_t' Times seconds travel automobile. 'bike_t' Times seconds travel bicycles. 'walk_d' Equivalent walking distance kilometres. 'ratio' Ratio bicycle automobile travel times.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate times from a specified point by bicycle and automobile, along with\n(optionally) corresponding walking distances. — m4ra_bike_car_times","text":"","code":"if (FALSE) { city <- \"<city_name>\" net <- m4ra_load_cached_network (city = city, mode = \"foot\") v <- dodgr::dodgr_vertices (net) from <- sample (v$id, size = 10) dat <- m4ra_bike_car_ratios (city = city, from = from) }"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"Construct travel time matrix pairs stops 'GTFS' feed.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"","code":"m4ra_gtfs_traveltimes(gtfs, start_time_limits, day)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"gtfs 'GTFS' feed extracted gtfsrouter function, 'extract_gtfs'. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"integer matrix fastest travel times stops specified 'start_time_limits'","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":null,"dir":"Reference","previous_headings":"","what":"m4ra_hampi — m4ra_hampi","title":"m4ra_hampi — m4ra_hampi","text":"sample street network township Hampi, Karnataka, India. dodgr::hampi dataset, sc rather sf format.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"m4ra_hampi — m4ra_hampi","text":"silicate sc representation street network Hampi.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"m4ra_hampi — m4ra_hampi","text":"Can re-created following commands.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"m4ra_hampi — m4ra_hampi","text":"","code":"if (FALSE) { hampi <- dodgr_streetnet_sc (\"hampi india\") }"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cached file for one city and mode — m4ra_load_cached_network","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"Load cached file one city mode","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"","code":"m4ra_load_cached_network(city = NULL, mode = \"foot\", filename = NULL)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"city City file loaded. mode One \"foot\", \"bicycle\", \"motorcar\". filename Can used specify particular filename load.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"Previously cached, weighted streetnet specified city mode.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a unique hash for the input network. — m4ra_network_hash","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"can used identify cached versions given network, particular determine whether weighted versions given network previously cached.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"","code":"m4ra_network_hash(net)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"net urban network osmdata_sc format osmdata package.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"Single character value unique hash given network.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"Get data parking availability building volumes estimate time penalties automobile travel.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"","code":"m4ra_parking(   bb,   city_name,   mode = \"motorcar\",   planet_file = NULL,   dlim = 5000,   k = 1000,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"bb Bounding box city query extract parking data. city_name Name city used name cached files. mode Mode transport used extract OSM node IDs estimate relative parking availability (generally \"motorcar\"). planet_file Optional file path local .osm.pbf .osm.bz2 file encompassing specified bounding box. given, data extracted system-level calls \"osmium\", must installed. dlim Distance limit metres contributions parking buildings aggregated. k exponential function used weight contributions distance, exp(-d / k) distance d. Default value 1000 metres decreases weight 37% 1km, 14% 2km, 0.6% 5km. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"data.frame vertices (contracted) network, additional columns quantifying number parking spaces associated vertex, well total volume surrounding buildings.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","title":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","text":"meta-function calls following functions: m4ra_weight_networks generate several versions input street network weighted different kinds transport. m4ra_gtfs_traveltimes generate also identifies closest GTFS stops every network point. function stores several differently-weighted version street networks local cache directory defined user_cache_dir() function rappdirs package, local environment parameter, \"M4RA_CACHE_DIR\", set.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","text":"","code":"m4ra_prepare_data(   net_sc = NULL,   gtfs = NULL,   city_name = NULL,   day = NULL,   start_time_limits = NULL,   final_mode = \"foot\",   fast = FALSE,   n_closest = 10L,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","text":"net_sc Local file path silicate, \"SC\", format object containing network data used generate weighted street networks. gtfs Local file path gtfsrouter object saved via saveRDS, containing GTFS (General Transit Feed Specification) data network represented net_sc. .Rds object may include additional timetable transfer information addition data represented original zip-format data provided GTFS feed. city_name Name city used name cached files. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. final_mode mode transport used final stage GTFS stops destination points. fast Values TRUE generate potentially enormous matrices may fit local memory. default value FALSE generally safer, calculation may take considerably longer. n_closest Final travel times destination point calculated tracing back times number closest GTFS stops. Lower values result faster calculation times, yet potentially inaccurate results. quiet FALSE, display progress information screen.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_modal","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_modal","text":"Alias m4ra_times_multi_mode","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_modal","text":"","code":"m4ra_times_multi_modal(   net_sc = NULL,   gtfs = NULL,   city_name = NULL,   day = NULL,   start_time_limits = NULL,   initial_mode = \"foot\",   final_mode = \"foot\",   from = NULL,   fast = FALSE,   n_closest = 10L,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_modal","text":"net_sc Local file path silicate, \"SC\", format object containing network data used generate weighted street networks. gtfs Local file path gtfsrouter object saved via saveRDS, containing GTFS (General Transit Feed Specification) data network represented net_sc. .Rds object may include additional timetable transfer information addition data represented original zip-format data provided GTFS feed. city_name Name city used name cached files. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. initial_mode Initial mode transport origin points towards public transport stop. final_mode mode transport used final stage GTFS stops destination points. List OSM vertex IDs calculate total multi-modal travel times. must vertices largest connected component contracted graph. fast Values TRUE generate potentially enormous matrices may fit local memory. default value FALSE generally safer, calculation may take considerably longer. n_closest Final travel times destination point calculated tracing back times number closest GTFS stops. Lower values result faster calculation times, yet potentially inaccurate results. quiet FALSE, display progress information screen.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","text":"Calculate matrix pair-wise travel times points using multiple modes transport.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","text":"","code":"m4ra_times_multi_mode(   net_sc = NULL,   gtfs = NULL,   city_name = NULL,   day = NULL,   start_time_limits = NULL,   initial_mode = \"foot\",   final_mode = \"foot\",   from = NULL,   fast = FALSE,   n_closest = 10L,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","text":"net_sc Local file path silicate, \"SC\", format object containing network data used generate weighted street networks. gtfs Local file path gtfsrouter object saved via saveRDS, containing GTFS (General Transit Feed Specification) data network represented net_sc. .Rds object may include additional timetable transfer information addition data represented original zip-format data provided GTFS feed. city_name Name city used name cached files. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. initial_mode Initial mode transport origin points towards public transport stop. final_mode mode transport used final stage GTFS stops destination points. List OSM vertex IDs calculate total multi-modal travel times. must vertices largest connected component contracted graph. fast Values TRUE generate potentially enormous matrices may fit local memory. default value FALSE generally safer, calculation may take considerably longer. n_closest Final travel times destination point calculated tracing back times number closest GTFS stops. Lower values result faster calculation times, yet potentially inaccurate results. quiet FALSE, display progress information screen.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"Calculate matrix pair-wise travel times points using single mode transport.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"","code":"m4ra_times_single_mode(graph, from = NULL, to = NULL, path = NULL)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"graph dodgr network returned weight_streetnet function using network obtained osmdata osmdata_sc function. Vector matrix points route distances calculated (see Notes) Vector matrix points route distances calculated (see Notes) path specified, save individual travel time vectors '' point local directory. values can either two-column matrices equivalent longitude latitude coordinates, else single columns precisely matching node numbers names given graph$graph$. NULL, pairwise distances calculated points specified . NULL, pairwise distances calculated nodes graph.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"","code":"net <- dodgr::weight_streetnet (m4ra_hampi, wt_profile = \"foot\") #> Loading required namespace: geodist #> Loading required namespace: dplyr traveltimes <- m4ra_times_single_mode (net)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"Construct travel time matrix stops 'GTFS' feed points street network.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"","code":"m4ra_times_to_gtfs_stops(graph, gtfs, from = NULL, graph_to_gtfs = TRUE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"graph dodgr network returned weight_streetnet function using network obtained osmdata osmdata_sc function. gtfs 'GTFS' feed extracted gtfsrouter function, 'extract_gtfs'. Vector matrix points route distances calculated. given, times calculated points network. effect graph_to_gtfs TRUE. graph_to_gtfs TRUE, generate matrix times network junctions 'graph' (points specified) stop 'gtfs$stops' table; otherwise generate matrix times stops network junctions.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"integer matrix fastest travel times either 'gtfs' stops network points ('graph_to_gtfs = FALSE'), way around ('graph_to_gtfs = TRUE').","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache weighted networks for routing query — m4ra_weight_networks","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"Uses default cache location specified rappdirs::user_cache_dir(). location can -ridden specifying local environment variable, \"M4RA_CACHE_DIR\". \"city\" parameter used prefix cached networks.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"","code":"m4ra_weight_networks(net, city, quiet = TRUE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"net urban network osmdata_sc format osmdata package. city Name city; used name cached network files. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"character vector local locations cached versions variously weighted network representations used m4ra.","code":""},{"path":[]}]
