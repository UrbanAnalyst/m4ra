[{"path":"https://atfutures.github.io/m4ra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Padgham. Author, maintainer.","code":""},{"path":"https://atfutures.github.io/m4ra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Padgham M (2023). m4ra: Many--Many Multi-Modal Routing Aggregator. R package version 0.1.1.013, https://github.com/ATFutures/m4ra.","code":"@Manual{,   title = {m4ra: Many-to-Many Multi-Modal Routing Aggregator},   author = {Mark Padgham},   year = {2023},   note = {R package version 0.1.1.013},   url = {https://github.com/ATFutures/m4ra}, }"},{"path":"https://atfutures.github.io/m4ra/index.html","id":"m4ra-many-to-many-multi-modal-routing-aggregator","dir":"","previous_headings":"","what":"Many-to-Many Multi-Modal Routing Aggregator","title":"Many-to-Many Multi-Modal Routing Aggregator","text":"Travel times using combination three transport modes: foot, bicycle, public transport. Ratios multi-modal times equivalent travel times private automobile, including local infrastructure-specific estimates time delays due parking.","code":""},{"path":"https://atfutures.github.io/m4ra/index.html","id":"data-needs","dir":"","previous_headings":"","what":"Data Needs","title":"Many-to-Many Multi-Modal Routing Aggregator","text":"representation local street network, osmdata_sc format, potentially including elevation data accommodate effects incline pedestrian bicycle travel times. GTFS (General Transit Feed Specification)-format data file public transport data study city location.","code":""},{"path":"https://atfutures.github.io/m4ra/index.html","id":"how","dir":"","previous_headings":"","what":"How?","title":"Many-to-Many Multi-Modal Routing Aggregator","text":"following parameters need specified: Name city - used name locally-cached files formed pre-processing. Day week public transport analysed. Starting time limits defining public transport component journey, fastest single journey every destination calculated. Initial final modes transport, either pedestrian bicycle. selection starting points calculate either multi-modal travel times, durations times equivalent automobile times. Travel times always calculated every destination point given network, single query returning matrices times, one row origin point, columns holding travel times possible destination points.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra-package.html","id":null,"dir":"Reference","previous_headings":"","what":"m4ra: Many-to-Many Multi-Modal Routing Aggregator — m4ra-package","title":"m4ra: Many-to-Many Multi-Modal Routing Aggregator — m4ra-package","text":"Many--many multi-modal routing aggregator, combining 'dodgr' 'gtfsrouter' complete routing urban networks.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"m4ra: Many-to-Many Multi-Modal Routing Aggregator — m4ra-package","text":"Maintainer: Mark Padgham mark.padgham@email.com","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"function runs directory contain number silicate sc-formatted street networks, generated dodgr_streetnet_sc function dodgr package. function uses default cache location specified rappdirs::user_cache_dir(). location can -ridden specifying local environment variable, \"M4RA_CACHE_DIR\".","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"","code":"m4ra_batch_weight_networks(net_dir, remove_these = NULL)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"net_dir Path local directory containing 'sc'-format street networks. remove_these Names 'sc'-format files converted weighted network form.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_batch_weight_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache a directory full of street networks for routing queries — m4ra_batch_weight_networks","text":"character vector local locations cached versions variously weighted network representations used various routing functions.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"Convert bicycle automobile times equivalent areas specified range ratios two travel times.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"","code":"m4ra_bike_car_ratio_areas(bike_car_dat, ratio_lims = 1 + 0:10/10)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"bike_car_dat Result m4ra_times_bike_car function specified vector points. ratio_lims Vector ratio limits used calculate areas within ratio bicycle automobile times less specified limits.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_bike_car_ratio_areas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bicycle and automobile times into equivalent areas for a specified\nrange of ratios of the two travel times. — m4ra_bike_car_ratio_areas","text":"data.frame one row point used calculate m4ra_times_bike_car, columns including OSM \"id\" value corresponding coordinates (\"x\" \"y\"), followed series columns, one specified value ratio_lims, containing areas square kilometres bicycle travel times within specified ratio car travel times.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_cache_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a weighted street network in both full and contracted forms to local\ncache. — m4ra_cache_network","title":"Save a weighted street network in both full and contracted forms to local\ncache. — m4ra_cache_network","text":"uses fst, strips attributes, saved separately, re-attached load_cached_network().","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_cache_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a weighted street network in both full and contracted forms to local\ncache. — m4ra_cache_network","text":"","code":"m4ra_cache_network(graph, city, mode)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_cache_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a weighted street network in both full and contracted forms to local\ncache. — m4ra_cache_network","text":"graph full network cached. city Name city; used name cached network files. mode Mode transport, name weighting profile used weight networks dodgr; used name cached network files.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_dists_n_pts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate network distances to nearest 'n' points. — m4ra_dists_n_pts","title":"Calculate network distances to nearest 'n' points. — m4ra_dists_n_pts","text":"Calculate network distances nearest 'n' points.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_dists_n_pts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate network distances to nearest 'n' points. — m4ra_dists_n_pts","text":"","code":"m4ra_dists_n_pts(graph, from = NULL, to = NULL, npts = 3L)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_dists_n_pts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate network distances to nearest 'n' points. — m4ra_dists_n_pts","text":"graph dodgr network returned weight_streetnet function using network obtained osmdata osmdata_sc function. Vector OpenStreetMap ID values route distances calculated. Vector OpenStreetMap ID values nearest 'npts' distances calculated. npts Number points distances calculated.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"Construct travel time matrix pairs stops 'GTFS' feed.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"","code":"m4ra_gtfs_traveltimes(   gtfs,   start_time_limits,   day,   from_stops = NULL,   next_interval = TRUE,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"gtfs 'GTFS' feed extracted gtfsrouter function, 'extract_gtfs'. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. from_stops NULL (default), calculate travel times stops identified parameter. values must stops taken gtfs$stops$stop_id. next_interval TRUE, calculate time intervals subsequent trips identified fastest trips. subsequent trips may necessarily fast initial trips, requires second calculation travel times. Setting parameter TRUE therefore generally double calculation time. Note intervals subsequent trips may negative alternative connections greater numbers transfers leave earlier initial, minimal-transfer trips. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_gtfs_traveltimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a travel time matrix between all pairs of stops in a 'GTFS' feed. — m4ra_gtfs_traveltimes","text":"list two three integer matrices: \"duration\": fastest travel times pairs stops specified 'start_time_limits'; \"ntransfers\": corresponding numbers transfers. ('next_interval = TRUE') \"intervals\": matrix intervals (seconds) next fastest service corresponding times 'duration' item.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":null,"dir":"Reference","previous_headings":"","what":"m4ra_hampi — m4ra_hampi","title":"m4ra_hampi — m4ra_hampi","text":"sample street network township Hampi, Karnataka, India. dodgr::hampi dataset, sc rather sf format.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"m4ra_hampi — m4ra_hampi","text":"silicate sc representation street network Hampi.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"m4ra_hampi — m4ra_hampi","text":"Can re-created following commands.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_hampi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"m4ra_hampi — m4ra_hampi","text":"","code":"if (FALSE) { hampi <- dodgr_streetnet_sc (\"hampi india\") }"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cached file for one city and mode — m4ra_load_cached_network","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"Load cached file one city mode","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"","code":"m4ra_load_cached_network(   city = NULL,   mode = \"foot\",   contracted = TRUE,   filename = NULL )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"city City file loaded. mode One \"foot\", \"bicycle\", \"motorcar\". contracted TRUE, load contracted version graph; otherwise load full graph. filename Optional name specific file load.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_load_cached_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load cached file for one city and mode — m4ra_load_cached_network","text":"Previously cached, weighted streetnet specified city mode.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a unique hash for the input network. — m4ra_network_hash","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"can used identify cached versions given network, particular determine whether weighted versions given network previously cached.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"","code":"m4ra_network_hash(graph)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"graph silicate, \"SC\", format object containing network data used generate weighted street networks.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_network_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a unique hash for the input network. — m4ra_network_hash","text":"Single character value unique hash given network.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"Get data parking availability building volumes estimate time penalties automobile travel.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"","code":"m4ra_parking(   bb,   city_name,   mode = \"motorcar\",   planet_file = NULL,   dlim = 5000,   k = 1000,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"bb Bounding box city query extract parking data. city_name Name city used name cached files. mode Mode transport used extract OSM node IDs estimate relative parking availability (generally \"motorcar\"). planet_file Optional file path local .osm.pbf .osm.bz2 file encompassing specified bounding box. given, data extracted system-level calls \"osmium\", must installed. dlim Distance limit metres contributions parking buildings aggregated. k exponential function used weight contributions distance, exp(-d / k) distance d. Default value 1000 metres decreases weight 37% 1km, 14% 2km, 0.6% 5km. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_parking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on parking availability and building volumes to estimate time\npenalties for automobile travel. — m4ra_parking","text":"data.frame vertices (contracted) network, additional columns quantifying number parking spaces associated vertex, well total volume surrounding buildings.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","title":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","text":"meta-function calls following functions: m4ra_weight_networks generate several versions input street network weighted different kinds transport. m4ra_gtfs_traveltimes generate also identifies closest GTFS stops every network point. function stores several differently-weighted version street networks local cache directory defined user_cache_dir() function rappdirs package, local environment parameter, \"M4RA_CACHE_DIR\", set.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","text":"","code":"m4ra_prepare_data(   net_sc = NULL,   gtfs = NULL,   city_name = NULL,   planet_file = NULL,   day = NULL,   start_time_limits = NULL,   final_mode = \"foot\",   fast = FALSE,   n_closest = 10L,   batch_size = NULL,   parking = FALSE,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare network and GTFS components for 'm4ra' queries. — m4ra_prepare_data","text":"net_sc Local file path silicate, \"SC\", format object containing network data used generate weighted street networks. gtfs Local file path gtfsrouter object saved via saveRDS, containing GTFS (General Transit Feed Specification) data network represented net_sc. .Rds object may include additional timetable transfer information addition data represented original zip-format data provided GTFS feed. city_name Name city used name cached files. planet_file Optional file path local .osm.pbf .osm.bz2 file encompassing specified bounding box. given, data extracted system-level calls \"osmium\", must installed. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. final_mode mode transport used final stage GTFS stops destination points. fast Values TRUE generate potentially enormous matrices may fit local memory. default value FALSE generally safer, calculation may take considerably longer. n_closest Final travel times destination point calculated tracing back times number closest GTFS stops. Lower values result faster calculation times, yet potentially inaccurate results. batch_size Default routine calculates full travel time matrices pairs stops. large GTFS feeds, matrix may fit memory, case parameter can set positive integer value sequentially calculate portions full matrix, final re-assembly single result. parking TRUE, calculate local densities parking availability building volumes, convert score used calculate time penalties automobile routing. quiet FALSE, display progress information screen.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_bike_car.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate relative times from a specified point by bicycle versus private\nautomobile, along with (optionally) corresponding walking distances. — m4ra_times_bike_car","title":"Calculate relative times from a specified point by bicycle versus private\nautomobile, along with (optionally) corresponding walking distances. — m4ra_times_bike_car","text":"city expects weighted networks generated m4ra_batch_weight_networks function, corresponding networks exist m4ra cache directory specified city.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_bike_car.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate relative times from a specified point by bicycle versus private\nautomobile, along with (optionally) corresponding walking distances. — m4ra_times_bike_car","text":"","code":"m4ra_times_bike_car(city = NULL, from = NULL, walk_dists = TRUE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_bike_car.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate relative times from a specified point by bicycle versus private\nautomobile, along with (optionally) corresponding walking distances. — m4ra_times_bike_car","text":"city City values calculated Vector OSM ID values vertices ratios calculated. Typically obtained loading one weighted network, sampling extracting vertices function m4ra_vertices. walk_dists TRUE, also calculate equivalent walking distances.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_bike_car.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate relative times from a specified point by bicycle versus private\nautomobile, along with (optionally) corresponding walking distances. — m4ra_times_bike_car","text":"data.frame destination vertices, including Open Street Map ID values, longitude latitude values, four variables: 'car_t' Times seconds travel automobile. 'bike_t' Times seconds travel bicycles. 'walk_d' Equivalent walking distance kilometres. 'ratio' Ratio bicycle automobile travel times.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_bike_car.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate relative times from a specified point by bicycle versus private\nautomobile, along with (optionally) corresponding walking distances. — m4ra_times_bike_car","text":"","code":"if (FALSE) { city <- \"<city_name>\" net <- m4ra_load_cached_network (city = city, mode = \"foot\") v <- m4ra_vertices (net, \"<city_name>\") from <- sample (v$id, size = 10) dat <- m4ra_bike_car_ratios (city = city, from = from) }"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_mm_car.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate relative times from a specified point by multi-modal transport\nversus private automobile, along with (optionally) corresponding walking\ndistances. — m4ra_times_mm_car","title":"Calculate relative times from a specified point by multi-modal transport\nversus private automobile, along with (optionally) corresponding walking\ndistances. — m4ra_times_mm_car","text":"city expects weighted networks generated m4ra_batch_weight_networks function, corresponding networks exist m4ra cache directory specified city.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_mm_car.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate relative times from a specified point by multi-modal transport\nversus private automobile, along with (optionally) corresponding walking\ndistances. — m4ra_times_mm_car","text":"","code":"m4ra_times_mm_car(   net_sc = NULL,   gtfs = NULL,   city_name = NULL,   day = NULL,   start_time_limits = NULL,   initial_mode = \"foot\",   final_mode = \"foot\",   from = NULL,   duration_max = NULL,   fast = FALSE,   n_closest = 10L,   walk_dists = TRUE,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_mm_car.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate relative times from a specified point by multi-modal transport\nversus private automobile, along with (optionally) corresponding walking\ndistances. — m4ra_times_mm_car","text":"net_sc Local file path silicate, \"SC\", format object containing network data used generate weighted street networks. gtfs Local file path gtfsrouter object saved via saveRDS, containing GTFS (General Transit Feed Specification) data network represented net_sc. .Rds object may include additional timetable transfer information addition data represented original zip-format data provided GTFS feed. city_name Name city used name cached files. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. initial_mode Initial mode transport origin points towards public transport stop. final_mode mode transport used final stage GTFS stops destination points. Vector OSM ID values vertices ratios calculated. Typically obtained loading one weighted network, sampling extracting vertices function m4ra_vertices. duration_max specified, calculate times point nearest GTFS stops specified maximal duration seconds. Values may provided overall travel times interest defined range maximal value. Specifying values parameter can can considerably reduce calculation times. fast Values TRUE generate potentially enormous matrices may fit local memory. default value FALSE generally safer, calculation may take considerably longer. n_closest Final travel times destination point calculated tracing back times number closest GTFS stops. Lower values result faster calculation times, yet potentially inaccurate results. walk_dists TRUE, also calculate equivalent walking distances. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_mm_car.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate relative times from a specified point by multi-modal transport\nversus private automobile, along with (optionally) corresponding walking\ndistances. — m4ra_times_mm_car","text":"data.frame destination vertices, including Open Street Map ID values, longitude latitude values, four variables: 'car_t' Times seconds travel automobile. 'mm_t' Times seconds equivalent multi-modal transport. 'walk_d' Equivalent walking distance kilometres. 'ratio' Ratio multi-modal automobile travel times.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_mm_car.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate relative times from a specified point by multi-modal transport\nversus private automobile, along with (optionally) corresponding walking\ndistances. — m4ra_times_mm_car","text":"","code":"if (FALSE) { city <- \"<city_name>\" net <- m4ra_load_cached_network (city = city, mode = \"foot\") v <- m4ra_vertices (net, \"<city_name>\") from <- sample (v$id, size = 10) dat <- m4ra_mm_car_ratios (city = city, from = from) }"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","text":"Calculate matrix pair-wise travel times points using multiple modes transport.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","text":"","code":"m4ra_times_multi_mode(   net_sc = NULL,   gtfs = NULL,   city_name = NULL,   day = NULL,   start_time_limits = NULL,   initial_mode = \"foot\",   final_mode = \"foot\",   from = NULL,   duration_max = NULL,   fast = FALSE,   n_closest = 10L,   quiet = FALSE )"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_multi_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix of pair-wise travel times between points using multiple\nmodes of transport. — m4ra_times_multi_mode","text":"net_sc Local file path silicate, \"SC\", format object containing network data used generate weighted street networks. gtfs Local file path gtfsrouter object saved via saveRDS, containing GTFS (General Transit Feed Specification) data network represented net_sc. .Rds object may include additional timetable transfer information addition data represented original zip-format data provided GTFS feed. city_name Name city used name cached files. day 'gtfs_traveltimes' function gtfsrouter, day matrix calculated. start_time_limits 'gtfs_traveltimes' function gtfsrouter, vector two values specifying earliest latest departure times station. initial_mode Initial mode transport origin points towards public transport stop. final_mode mode transport used final stage GTFS stops destination points. List OSM vertex IDs calculate total multi-modal travel times. must vertices largest connected component contracted graph. duration_max specified, calculate times point nearest GTFS stops specified maximal duration seconds. Values may provided overall travel times interest defined range maximal value. Specifying values parameter can can considerably reduce calculation times. fast Values TRUE generate potentially enormous matrices may fit local memory. default value FALSE generally safer, calculation may take considerably longer. n_closest Final travel times destination point calculated tracing back times number closest GTFS stops. Lower values result faster calculation times, yet potentially inaccurate results. quiet FALSE, display progress information screen.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"Calculate matrix pair-wise travel times points using single mode transport.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"","code":"m4ra_times_single_mode(graph, from = NULL, to = NULL, path = NULL)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"graph dodgr network returned weight_streetnet function using network obtained osmdata osmdata_sc function. Vector matrix points route distances calculated (see Notes) Vector matrix points route distances calculated (see Notes) path specified, save individual travel time vectors '' point local directory. values can either two-column matrices equivalent longitude latitude coordinates, else single columns precisely matching node numbers names given graph$graph$. NULL, pairwise distances calculated points specified . NULL, pairwise distances calculated nodes graph.","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_single_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate matrix of pair-wise travel times between points using a single mode\nof transport. — m4ra_times_single_mode","text":"","code":"net <- dodgr::weight_streetnet (m4ra_hampi, wt_profile = \"foot\") #> Loading required namespace: geodist #> Loading required namespace: dplyr traveltimes <- m4ra_times_single_mode (net)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"Construct travel time matrix stops 'GTFS' feed points street network.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"","code":"m4ra_times_to_gtfs_stops(graph, gtfs, city, from = NULL, graph_to_gtfs = TRUE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"graph dodgr network returned weight_streetnet function using network obtained osmdata osmdata_sc function. gtfs 'GTFS' feed extracted gtfsrouter function, 'extract_gtfs'. city Name city analysed; used name extract cache files. Vector matrix points route distances calculated. given, times calculated points network. effect graph_to_gtfs TRUE. graph_to_gtfs TRUE, generate matrix times network junctions 'graph' (points specified) stop 'gtfs$stops' table; otherwise generate matrix times stops network junctions.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_times_to_gtfs_stops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a travel time matrix to or from all stops in a 'GTFS' feed from or\nto to all points in a street network. — m4ra_times_to_gtfs_stops","text":"integer matrix fastest travel times either 'gtfs' stops network points ('graph_to_gtfs = FALSE'), way around ('graph_to_gtfs = TRUE').","code":""},{"path":[]},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"m4ra_vertices — m4ra_vertices","title":"m4ra_vertices — m4ra_vertices","text":"Extract vertices graph, including spatial coordinates included. Modified version equivalent dodgr function uses different hash comparisons, uses fst write/read functions. version also none checks implemented dodgr version, assumes graphs remain unmodified throughout.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"m4ra_vertices — m4ra_vertices","text":"","code":"m4ra_vertices(graph, city)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"m4ra_vertices — m4ra_vertices","text":"graph flat table graph edges. Must contain columns labelled , start stop. May also contain similarly labelled columns spatial coordinates (example from_x stop_lon). city Name city; used name cached network files.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_vertices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"m4ra_vertices — m4ra_vertices","text":"data.frame vertices unique numbers (n).","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_vertices.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"m4ra_vertices — m4ra_vertices","text":"Values n 0-indexed","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_vertices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"m4ra_vertices — m4ra_vertices","text":"","code":"graph <- dodgr::weight_streetnet (dodgr::hampi) v <- m4ra_vertices (graph, \"hampi\") #> Warning: `recursive` is deprecated, please use `recurse` instead"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache weighted networks for routing query — m4ra_weight_networks","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"Uses default cache location specified rappdirs::user_cache_dir(). location can -ridden specifying local environment variable, \"M4RA_CACHE_DIR\". \"city\" parameter used prefix cached networks.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"","code":"m4ra_weight_networks(net, city, quiet = TRUE)"},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"net silicate, \"SC\", format object containing network data used generate weighted street networks. city Name city; used name cached network files. quiet FALSE, display progress information screen.","code":""},{"path":"https://atfutures.github.io/m4ra/reference/m4ra_weight_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache weighted networks for routing query — m4ra_weight_networks","text":"character vector local locations cached versions variously weighted network representations used various routing functions.","code":""},{"path":[]}]
